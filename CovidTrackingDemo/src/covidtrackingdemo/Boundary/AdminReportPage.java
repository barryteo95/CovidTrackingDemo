/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package covidtrackingdemo.Boundary;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author User
 */
public class AdminReportPage extends javax.swing.JFrame {

    Map<LocalDate, Integer> vacDict;
    Map<LocalDate, Integer> infDict;

    /**
     * Creates new form AdminReportPage
     */
    public AdminReportPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param vacDict
     * @param infDict
     * @param args the command line arguments
     */
    public void setDict(Map<LocalDate, Integer> vacDict, Map<LocalDate, Integer> infDict) {
    
        this.vacDict = vacDict;
        this.infDict = infDict;
        
        init();
    }
    
    private void init() {

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        // Populate the datasets so that the charts can plot it 
        DefaultCategoryDataset vacDataset = new DefaultCategoryDataset();
        DefaultCategoryDataset infDataset = new DefaultCategoryDataset();

        for (Map.Entry<LocalDate, Integer> me : vacDict.entrySet()) {

            vacDataset.setValue(me.getValue(), "Count", formatter.format(me.getKey()));
        }

        for (Map.Entry<LocalDate, Integer> me : infDict.entrySet()) {

            infDataset.setValue(me.getValue(), "Count", formatter.format(me.getKey()));
        }

        JFreeChart vacChart = ChartFactory.createBarChart("Past 7 days trend of the number of vaccination",
                "Date",
                "Number of vaccination",
                vacDataset,
                PlotOrientation.VERTICAL,
                false,
                true,
                false);
        
        CategoryPlot vacP = vacChart.getCategoryPlot();
        vacP.setRangeGridlinePaint(Color.black);
        vacP.getRangeAxis().setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        JFreeChart infChart = ChartFactory.createBarChart("Past 7 days trend of the number of infection",
                "Date",
                "Number of infection",
                infDataset,
                PlotOrientation.VERTICAL,
                false,
                true,
                false);
        
        CategoryPlot infP = infChart.getCategoryPlot();
        infP.setRangeGridlinePaint(Color.black);
        infP.getRangeAxis().setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartPanel vacPanel = new ChartPanel(vacChart);
        vacPanel.setPreferredSize(new Dimension(600, 400));

        ChartPanel infPanel = new ChartPanel(infChart);
        infPanel.setPreferredSize(new Dimension(600, 400));

        // Panel TOP
        JPanel topPanel = new JPanel();
        topPanel.setPreferredSize(new Dimension(800, 100));

        JLabel subHeaderLabel = new JLabel("GENERATE REPORT");
        subHeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        subHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subHeaderLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        subHeaderLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
        topPanel.add(subHeaderLabel);

        // Panel MIDDLE
        // SHOW 2 CHARTS
        JPanel midPanel = new JPanel();
        midPanel.setPreferredSize(new Dimension(800, 600));
        midPanel.add(vacPanel, BorderLayout.LINE_START);
        midPanel.add(infPanel, BorderLayout.LINE_END);

        // Panel BOTTOM
        // SAVE IMAGE
        JButton saveChartBtn = new JButton("SAVE CHART");
        saveChartBtn.setBounds(100, 100, 300, 100);
        
        saveChartBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                try {

                    final ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());
                    final File vacFile = new File("vacChart.png");
                    final File infFile = new File("infChart.png");
                    ChartUtilities.saveChartAsJPEG(vacFile, vacChart, 600, 400, info);
                    ChartUtilities.saveChartAsJPEG(infFile, infChart, 600, 400, info);
                    JOptionPane.showMessageDialog(null, "Report downloaded as JPEG.");

                } catch (IOException ex) {
                    Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        JPanel botPanel = new JPanel();
        botPanel.setPreferredSize(new Dimension(800, 100));
        botPanel.add(saveChartBtn);

        JFrame frame = new JFrame("Covid19 Report");

        frame.getContentPane().add(topPanel, BorderLayout.PAGE_START);
        frame.getContentPane().add(midPanel, BorderLayout.CENTER);
        frame.getContentPane().add(botPanel, BorderLayout.PAGE_END);

        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        frame.setResizable(true);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminReportPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminReportPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminReportPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminReportPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminReportPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
